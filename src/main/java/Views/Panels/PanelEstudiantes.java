package Views.Panels;

import Controllers.MateriaController;
import Controllers.MateriaEstudianteController;
import Models.Configurations;
import Models.MateriaEstudiante;
import Models.Persona;
import java.awt.Color;
import java.awt.Component;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class PanelEstudiantes extends javax.swing.JPanel {
    
    private final MateriaEstudianteController _mec = MateriaEstudianteController.getInstance();
    private final int idMateria;
    private List<Persona> estudiantes;
    /**
     * Creates new form PanelEstudiantes
     */
    public PanelEstudiantes(int idMateria) {
        initComponents();
        this.idMateria = idMateria;
        initializeConfigurations();
    }
    
    private void initializeConfigurations(){
        SwingUtilities.invokeLater(() -> Configurations.setImageToLabel(iconBuscar, "/icon_search.png"));
        estudiantes = cargarListaCompleta();
        lblTotal.setText(""+ (estudiantes.size()-1));
        cargarTabla(estudiantes);
        asignarEfectoTabla(tablaMain);
    }
    
    private List<Persona> cargarListaCompleta(){
        List<Persona> lista = _mec.getEstudiantesByIdMateria(idMateria);
        lista.sort(Comparator.comparing(e -> (e.getNombre() + " " + e.getApellido()).toLowerCase()));
        MateriaController _mc = MateriaController.getInstance();
        Persona docente = _mc.getMateriaById(idMateria).getDocente();        
        lista.add(0, docente);
        return lista;
    }
    
    private void asignarEfectoTabla(JTable jTable1){
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            // Obtener el componente predeterminado
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            // Obtener el valor de la columna "Rol" (índice 3 en este caso)
            String rol = (String) table.getValueAt(row, 2); // Ajusta el índice según la estructura de tu tabla

            // Cambiar el color de fondo si el rol es "Docente"
            if ("Docente".equalsIgnoreCase(rol)) {
                c.setBackground(new Color(153,255,102));
            } else {
                c.setBackground(Color.WHITE); // Color predeterminado
            }

            // Cambiar el color cuando la fila esté seleccionada
            if (isSelected) {
                c.setBackground(table.getSelectionBackground());
                c.setForeground(table.getSelectionForeground());
            } else {
                c.setForeground(Color.BLACK); // Color del texto predeterminado
            }

            return c;
        }
    });
    }
    
    private void cargarTabla(List<Persona> lista){        
         // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) tablaMain.getModel();

        // Limpiar los datos existentes en la tabla
        model.setRowCount(0);

        // Llenar la tabla con los datos de la lista
        for (Persona e : lista) {
            model.addRow(new Object[]{
                e.getNombre() + " " + e.getApellido(),
                e.getCorreo(),
                e.getRol().getDescripcion()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBuscar = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        iconBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        pnlLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMain = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(498, 429));
        setMinimumSize(new java.awt.Dimension(498, 429));

        pnlBuscar.setBackground(new java.awt.Color(255, 255, 255));
        pnlBuscar.setMaximumSize(new java.awt.Dimension(498, 44));
        pnlBuscar.setMinimumSize(new java.awt.Dimension(498, 44));
        pnlBuscar.setPreferredSize(new java.awt.Dimension(498, 44));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        iconBuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Xavier\\OneDrive - Universidad de Guayaquil\\(AAB) UG\\Student_Task_Manager\\src\\main\\resources\\icon_search.png")); // NOI18N
        iconBuscar.setMaximumSize(new java.awt.Dimension(25, 25));
        iconBuscar.setMinimumSize(new java.awt.Dimension(25, 25));
        iconBuscar.setPreferredSize(new java.awt.Dimension(25, 25));

        txtBuscar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBuscarCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(iconBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlBuscar.add(jPanel1);

        pnlLista.setBackground(new java.awt.Color(255, 255, 255));
        pnlLista.setMaximumSize(new java.awt.Dimension(498, 280));
        pnlLista.setMinimumSize(new java.awt.Dimension(498, 280));

        tablaMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre Apellido", "Correo", "Rol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaMain.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaMain);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Total de Estudiantes:");

        lblTotal.setText("jLabel2");

        javax.swing.GroupLayout pnlListaLayout = new javax.swing.GroupLayout(pnlLista);
        pnlLista.setLayout(pnlListaLayout);
        pnlListaLayout.setHorizontalGroup(
            pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTotal))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnlListaLayout.setVerticalGroup(
            pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTotal)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(pnlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBuscarCaretUpdate
        String buscar = txtBuscar.getText().toLowerCase();
        List<Persona> filtro;
        if(buscar.equals("")) filtro = estudiantes;
        else{
            filtro = estudiantes.stream()
            .filter(e -> (e.getNombre().toLowerCase() + " " + 
                         e.getApellido().toLowerCase()).contains(buscar) || // Buscar en el nombre apellido                     
                         e.getCorreo().toLowerCase().contains(buscar) || // Buscar en el correo
                         e.getRol().getDescripcion().toLowerCase().contains(buscar)) // Buscar en el rol
            .collect(Collectors.toList());
        }
        cargarTabla(filtro);
    }//GEN-LAST:event_txtBuscarCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlBuscar;
    private javax.swing.JPanel pnlLista;
    private javax.swing.JTable tablaMain;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
